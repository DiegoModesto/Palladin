// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Palladin.Data.EntityFramework;

namespace Palladin.Data.EntityFramework.Migrations
{
    [DbContext(typeof(PalladinContext))]
    [Migration("20190918220410_RealInitialCatalog")]
    partial class RealInitialCatalog
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Palladin.Data.Entity.MediaEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Archive")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasMaxLength(2500);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("Medias");
                });

            modelBuilder.Entity("Palladin.Data.Entity.MediaPVEntity", b =>
                {
                    b.Property<Guid>("MediaId");

                    b.Property<Guid>("ProjectVulnerabilityId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("IsDeleted");

                    b.HasKey("MediaId", "ProjectVulnerabilityId")
                        .HasName("FK_Media_PV");

                    b.HasIndex("ProjectVulnerabilityId");

                    b.ToTable("MediaProjectVultis");
                });

            modelBuilder.Entity("Palladin.Data.Entity.MenuEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<short>("Order")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("ParentId");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1d9ded52-dc8b-4276-ad0e-4a5bccae93e0"),
                            Name = "Client",
                            Order = (short)0,
                            Path = "/projects"
                        },
                        new
                        {
                            Id = new Guid("b6a6c83a-0382-4ae2-99ed-37cc98baf2a4"),
                            Name = "Client",
                            Order = (short)0,
                            ParentId = new Guid("1d9ded52-dc8b-4276-ad0e-4a5bccae93e0"),
                            Path = "/projects/view-details"
                        },
                        new
                        {
                            Id = new Guid("0192ec60-ea5c-4ea3-8ab9-8e6c0be3df20"),
                            Name = "eSecurity",
                            Order = (short)0,
                            Path = "/projects"
                        },
                        new
                        {
                            Id = new Guid("6035459a-38c2-47da-896e-c7444a129f1e"),
                            Name = "eSecurity",
                            Order = (short)0,
                            ParentId = new Guid("0192ec60-ea5c-4ea3-8ab9-8e6c0be3df20"),
                            Path = "/projects/create"
                        },
                        new
                        {
                            Id = new Guid("c7f75934-40c3-4f2f-9005-67503ab34e3d"),
                            Name = "eSecurity",
                            Order = (short)1,
                            ParentId = new Guid("0192ec60-ea5c-4ea3-8ab9-8e6c0be3df20"),
                            Path = "/projects/join"
                        },
                        new
                        {
                            Id = new Guid("3f836f67-da2a-4a4a-a557-b0e8aacb59da"),
                            Name = "eSecurity",
                            Order = (short)1,
                            Path = "/vulnerabilities"
                        },
                        new
                        {
                            Id = new Guid("1746e741-d9e3-4574-b1f5-4e5888057488"),
                            Name = "eSecurity",
                            Order = (short)0,
                            ParentId = new Guid("3f836f67-da2a-4a4a-a557-b0e8aacb59da"),
                            Path = "/vulnerabilities/create"
                        });
                });

            modelBuilder.Entity("Palladin.Data.Entity.MethodProtocolEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<short>("ProjectType")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("MethodProtocols");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b01f2cab-82aa-443a-ab48-61707438145e"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "GET",
                            ProjectType = (short)0
                        },
                        new
                        {
                            Id = new Guid("09ef5a8a-6a55-4370-ad90-3f745a866d3b"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "POST",
                            ProjectType = (short)0
                        },
                        new
                        {
                            Id = new Guid("f09efb98-df65-430e-bcc7-a73f8403789b"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "PUT",
                            ProjectType = (short)0
                        },
                        new
                        {
                            Id = new Guid("d1054e36-4d06-4e3a-b052-502a70f41a8c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "DELETE",
                            ProjectType = (short)0
                        },
                        new
                        {
                            Id = new Guid("b63a4d3b-5152-4c4f-9614-77587c064a9b"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "IP",
                            ProjectType = (short)1
                        },
                        new
                        {
                            Id = new Guid("0b45ff60-bc86-4317-a8e2-bd0c0718f04d"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "FTP",
                            ProjectType = (short)1
                        },
                        new
                        {
                            Id = new Guid("7a38bff6-291d-468a-b44a-0710bb5077db"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "SSH",
                            ProjectType = (short)1
                        },
                        new
                        {
                            Id = new Guid("4c8cf2f5-c68d-441c-9a9f-19dfadd08fd2"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "SSL",
                            ProjectType = (short)1
                        },
                        new
                        {
                            Id = new Guid("d3b25a96-5731-46a3-b895-6e39d23c0564"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "TELNET",
                            ProjectType = (short)1
                        },
                        new
                        {
                            Id = new Guid("a8b627b8-3f6c-4ea1-8987-8e08ee77f610"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "SMTP",
                            ProjectType = (short)1
                        },
                        new
                        {
                            Id = new Guid("71695098-3236-43f8-a754-88daa7f0daea"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "POP3",
                            ProjectType = (short)1
                        },
                        new
                        {
                            Id = new Guid("88deec05-1e71-4bf8-abfa-630fd61d25af"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "IMAP4",
                            ProjectType = (short)1
                        },
                        new
                        {
                            Id = new Guid("c8e292b7-5959-412c-9e49-dc5dfad55588"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "HTTP",
                            ProjectType = (short)1
                        },
                        new
                        {
                            Id = new Guid("8da0aaee-a4e0-440c-a3f6-e25579a15a92"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "HTTPS",
                            ProjectType = (short)1
                        },
                        new
                        {
                            Id = new Guid("33c0801d-6189-4ee9-9211-008519a57914"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "SIP",
                            ProjectType = (short)1
                        });
                });

            modelBuilder.Entity("Palladin.Data.Entity.ProjectEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InitialDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(80)");

                    b.Property<short>("ProjectType")
                        .HasColumnType("smallint");

                    b.Property<string>("Subsidiary")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f60da305-2561-47b9-aebf-aecb785b0bd3"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateTime(2019, 11, 24, 22, 4, 10, 266, DateTimeKind.Utc).AddTicks(6187),
                            InitialDate = new DateTime(2019, 11, 17, 22, 4, 10, 266, DateTimeKind.Utc).AddTicks(5792),
                            IsDeleted = false,
                            Name = "Projeto 01 [Web]: <br />Domínio: http://www.siteinseguro.com.br/",
                            ProjectType = (short)0,
                            Subsidiary = "Subsidiária"
                        });
                });

            modelBuilder.Entity("Palladin.Data.Entity.ProjectVulnerabilityEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Environment")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("FiledOrCookieName");

                    b.Property<bool>("IsDeleted");

                    b.Property<Guid>("MethodProtocolId");

                    b.Property<string>("Observation")
                        .HasColumnType("text");

                    b.Property<string>("Port")
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("ProjectId");

                    b.Property<short>("Status")
                        .HasColumnType("smallint");

                    b.Property<Guid>("UserId");

                    b.Property<Guid>("VulnerabilityId");

                    b.HasKey("Id");

                    b.HasIndex("MethodProtocolId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.HasIndex("VulnerabilityId");

                    b.ToTable("ProjectsVulnerability");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4b61176e-1154-4cab-863c-efd0172f1afc"),
                            CreatedDate = new DateTime(2019, 11, 7, 22, 4, 10, 266, DateTimeKind.Utc).AddTicks(8907),
                            Environment = "register.php",
                            FiledOrCookieName = "password",
                            IsDeleted = false,
                            MethodProtocolId = new Guid("09ef5a8a-6a55-4370-ad90-3f745a866d3b"),
                            Port = "80",
                            ProjectId = new Guid("f60da305-2561-47b9-aebf-aecb785b0bd3"),
                            Status = (short)1,
                            UserId = new Guid("332e1405-b3f7-4c44-8fff-6fda45fa13c3"),
                            VulnerabilityId = new Guid("21536a2a-6b90-4cf0-ae88-ab09da264cfc")
                        },
                        new
                        {
                            Id = new Guid("f37254b1-8969-461e-8983-dad6c6d13707"),
                            CreatedDate = new DateTime(2019, 11, 7, 22, 4, 10, 267, DateTimeKind.Utc).AddTicks(1871),
                            Environment = "register.php",
                            FiledOrCookieName = "retype-password",
                            IsDeleted = false,
                            MethodProtocolId = new Guid("09ef5a8a-6a55-4370-ad90-3f745a866d3b"),
                            Port = "80",
                            ProjectId = new Guid("f60da305-2561-47b9-aebf-aecb785b0bd3"),
                            Status = (short)1,
                            UserId = new Guid("332e1405-b3f7-4c44-8fff-6fda45fa13c3"),
                            VulnerabilityId = new Guid("21536a2a-6b90-4cf0-ae88-ab09da264cfc")
                        },
                        new
                        {
                            Id = new Guid("95ffea42-01b2-4b44-a21b-753ce5af0213"),
                            CreatedDate = new DateTime(2019, 11, 7, 22, 4, 10, 267, DateTimeKind.Utc).AddTicks(1895),
                            Environment = "contato.php",
                            FiledOrCookieName = "name",
                            IsDeleted = false,
                            MethodProtocolId = new Guid("09ef5a8a-6a55-4370-ad90-3f745a866d3b"),
                            Port = "80",
                            ProjectId = new Guid("f60da305-2561-47b9-aebf-aecb785b0bd3"),
                            Status = (short)1,
                            UserId = new Guid("332e1405-b3f7-4c44-8fff-6fda45fa13c3"),
                            VulnerabilityId = new Guid("74b45d1f-e6e2-474d-b7e3-5cecefe825e5")
                        });
                });

            modelBuilder.Entity("Palladin.Data.Entity.RefreshTokenEntity", b =>
                {
                    b.Property<string>("Token")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationDate");

                    b.Property<DateTime>("ExpirationDate");

                    b.Property<bool>("IsInvalided");

                    b.Property<bool>("IsUsed");

                    b.Property<string>("JwtId");

                    b.Property<Guid>("UserId");

                    b.HasKey("Token");

                    b.ToTable("RefreshTokenEntity");
                });

            modelBuilder.Entity("Palladin.Data.Entity.RoleEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<short>("Level")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .HasMaxLength(60);

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Palladin.Data.Entity.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<Guid?>("MenuId");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("ProjectId");

                    b.Property<string>("UserName");

                    b.Property<short>("UserType")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("MenuId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c410975d-9187-413f-9dd9-423531ea1968"),
                            CreatedDate = new DateTime(2019, 6, 20, 19, 4, 10, 262, DateTimeKind.Local).AddTicks(2025),
                            Email = "diego@cliente.com",
                            IsDeleted = false,
                            Login = "201909182204",
                            Password = "5ivWjl+ZjGohSxB1pb/U+w==",
                            UserName = "Diego Sanches",
                            UserType = (short)1
                        },
                        new
                        {
                            Id = new Guid("332e1405-b3f7-4c44-8fff-6fda45fa13c3"),
                            CreatedDate = new DateTime(2019, 6, 20, 19, 4, 10, 263, DateTimeKind.Local).AddTicks(8695),
                            Email = "adm@esecurity.com",
                            IsDeleted = false,
                            Login = "201909182204",
                            Password = "5ivWjl+ZjGohSxB1pb/U+w==",
                            UserName = "Administrador [eSecurity]",
                            UserType = (short)0
                        });
                });

            modelBuilder.Entity("Palladin.Data.Entity.UserMenuEntity", b =>
                {
                    b.Property<Guid>("MenuId");

                    b.Property<Guid>("UserId");

                    b.HasKey("MenuId", "UserId")
                        .HasName("FK_Menu_User");

                    b.HasIndex("UserId");

                    b.ToTable("UserMenuEntity");

                    b.HasData(
                        new
                        {
                            MenuId = new Guid("1d9ded52-dc8b-4276-ad0e-4a5bccae93e0"),
                            UserId = new Guid("c410975d-9187-413f-9dd9-423531ea1968")
                        },
                        new
                        {
                            MenuId = new Guid("0192ec60-ea5c-4ea3-8ab9-8e6c0be3df20"),
                            UserId = new Guid("332e1405-b3f7-4c44-8fff-6fda45fa13c3")
                        },
                        new
                        {
                            MenuId = new Guid("3f836f67-da2a-4a4a-a557-b0e8aacb59da"),
                            UserId = new Guid("332e1405-b3f7-4c44-8fff-6fda45fa13c3")
                        });
                });

            modelBuilder.Entity("Palladin.Data.Entity.UserRoleEntity", b =>
                {
                    b.Property<Guid>("UserId");

                    b.Property<Guid>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UsersRoles");
                });

            modelBuilder.Entity("Palladin.Data.Entity.VulnerabilityEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CVSS")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<short>("ProjectType")
                        .HasColumnType("smallint");

                    b.Property<string>("References")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<short>("RiskFactor")
                        .HasColumnType("smallint");

                    b.Property<string>("Tags")
                        .HasColumnType("text");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Vulnerabilities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("21536a2a-6b90-4cf0-ae88-ab09da264cfc"),
                            CVSS = "AV:N/AV:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
                            CreatedDate = new DateTime(2019, 9, 18, 19, 4, 10, 265, DateTimeKind.Local).AddTicks(6388),
                            IsDeleted = false,
                            Name = "Weak Password Policy",
                            ProjectType = (short)0,
                            References = "http://www.owasp.org/index.php/Testing_for_Weak_password_policy",
                            RiskFactor = (short)3,
                            Tags = "password,weak-password,weak-password-policy,password-policy",
                            UserId = new Guid("332e1405-b3f7-4c44-8fff-6fda45fa13c3")
                        },
                        new
                        {
                            Id = new Guid("74b45d1f-e6e2-474d-b7e3-5cecefe825e5"),
                            CVSS = "AV:N/AV:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
                            CreatedDate = new DateTime(2019, 9, 18, 19, 4, 10, 265, DateTimeKind.Local).AddTicks(9878),
                            IsDeleted = false,
                            Name = "Buffer overflow",
                            ProjectType = (short)0,
                            References = "http://www.owasp.org/index.php/buffer_overflow_field",
                            RiskFactor = (short)3,
                            Tags = "field-validation,field-weak",
                            UserId = new Guid("332e1405-b3f7-4c44-8fff-6fda45fa13c3")
                        });
                });

            modelBuilder.Entity("Palladin.Data.Entity.VulnerabilityLangEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted");

                    b.Property<short>("LanguageType")
                        .HasColumnType("smallint");

                    b.Property<string>("Remediation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("VulnerabilityId");

                    b.HasKey("Id");

                    b.HasIndex("VulnerabilityId");

                    b.ToTable("VulnerabilityLangs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("551588d2-dadf-498a-be10-2cebfa2c3efc"),
                            CreatedDate = new DateTime(2019, 9, 18, 19, 4, 10, 266, DateTimeKind.Local).AddTicks(881),
                            Description = @"The application does not require users to have strong passwords. The lack of password complexity significantly reduces search space by trying to guess user passwords, facilitating brute force attacks.
                    Thus,
                    it was possible to gain access to the system using a user account that has weak password and easy guessing. From the accessed account,
                    A new account has been created.",
                            IsDeleted = false,
                            LanguageType = (short)1,
                            Remediation = @"Enter a strong password policy (which ensures password length, complexity, reuse and aging) and / or
                    additional authentication controls (double factor authentication).",
                            VulnerabilityId = new Guid("21536a2a-6b90-4cf0-ae88-ab09da264cfc")
                        },
                        new
                        {
                            Id = new Guid("f089facc-9c97-4835-afc7-bd36e48bfe3c"),
                            CreatedDate = new DateTime(2019, 9, 18, 19, 4, 10, 266, DateTimeKind.Local).AddTicks(2402),
                            Description = @"A aplicação não exige que os usuários tenham senhas fortes. A falta de complexidade de senha reduz significamente o espaço de busca ao tentar adivinhar as senhas dos usuários, facilitando ataques de força bruta.
                    Dessa forma,
                    foi possível obter acesso ao sistema utilizando uma conta de usuário que possui senha fraca e de fácil adivinhação.A partir da conta acessada,
                    uma nova conta foi criada.",
                            IsDeleted = false,
                            LanguageType = (short)0,
                            Remediation = @"Introduza uma política de senha forte (que garanta o tamanho, a complexidade, a reutilização e o envelhecimento da senha) e/ou
                    controles de autenticação adicionais (duplo fator de autenticação).",
                            VulnerabilityId = new Guid("21536a2a-6b90-4cf0-ae88-ab09da264cfc")
                        },
                        new
                        {
                            Id = new Guid("e161d574-6ac8-47d2-9abf-3f72d46131b8"),
                            CreatedDate = new DateTime(2019, 9, 18, 19, 4, 10, 266, DateTimeKind.Local).AddTicks(2420),
                            Description = @"La aplicación no requiere que los usuarios tengan contraseñas seguras. La falta de complejidad de la contraseña reduce significativamente el espacio de búsqueda al tratar de adivinar las contraseñas de los usuarios, lo que facilita los ataques de fuerza bruta.
                    De esa forma,
                    fue posible obtener acceso al sistema utilizando una cuenta de usuario que tiene una contraseña débil y fácil de adivinar.
                    Se ha creado una nueva cuenta.",
                            IsDeleted = false,
                            LanguageType = (short)2,
                            Remediation = @"Ingrese una política de contraseña segura (que asegure la longitud, complejidad, reutilización y antigüedad de la contraseña) y / o
                    controles de autenticación adicionales (autenticación de doble factor).",
                            VulnerabilityId = new Guid("21536a2a-6b90-4cf0-ae88-ab09da264cfc")
                        });
                });

            modelBuilder.Entity("Palladin.Data.Entity.MediaPVEntity", b =>
                {
                    b.HasOne("Palladin.Data.Entity.MediaEntity", "Media")
                        .WithMany("MediaPVEntities")
                        .HasForeignKey("MediaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Palladin.Data.Entity.ProjectVulnerabilityEntity", "ProjectVulnerability")
                        .WithMany("MediaPVEntities")
                        .HasForeignKey("ProjectVulnerabilityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Palladin.Data.Entity.MenuEntity", b =>
                {
                    b.HasOne("Palladin.Data.Entity.MenuEntity", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("Palladin.Data.Entity.ProjectVulnerabilityEntity", b =>
                {
                    b.HasOne("Palladin.Data.Entity.MethodProtocolEntity", "MethodProtocol")
                        .WithMany()
                        .HasForeignKey("MethodProtocolId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Palladin.Data.Entity.ProjectEntity", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Palladin.Data.Entity.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Palladin.Data.Entity.VulnerabilityEntity", "Vulnerability")
                        .WithOne("ProjectVulnerability")
                        .HasForeignKey("Palladin.Data.Entity.ProjectVulnerabilityEntity", "VulnerabilityId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Palladin.Data.Entity.UserEntity", b =>
                {
                    b.HasOne("Palladin.Data.Entity.MenuEntity", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId");

                    b.HasOne("Palladin.Data.Entity.ProjectEntity", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");
                });

            modelBuilder.Entity("Palladin.Data.Entity.UserMenuEntity", b =>
                {
                    b.HasOne("Palladin.Data.Entity.MenuEntity", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Palladin.Data.Entity.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Palladin.Data.Entity.UserRoleEntity", b =>
                {
                    b.HasOne("Palladin.Data.Entity.RoleEntity", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Palladin.Data.Entity.UserEntity", "User")
                        .WithMany("Roles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Palladin.Data.Entity.VulnerabilityEntity", b =>
                {
                    b.HasOne("Palladin.Data.Entity.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Palladin.Data.Entity.VulnerabilityLangEntity", b =>
                {
                    b.HasOne("Palladin.Data.Entity.VulnerabilityEntity", "Vulnerability")
                        .WithMany("Vulnerabilities")
                        .HasForeignKey("VulnerabilityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
