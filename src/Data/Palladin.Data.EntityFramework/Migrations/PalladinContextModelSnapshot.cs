// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Palladin.Data.EntityFramework;

namespace Palladin.Data.EntityFramework.Migrations
{
    [DbContext(typeof(PalladinContext))]
    partial class PalladinContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Palladin.Data.Entity.MediaEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Archive")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasMaxLength(2500);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("Medias");
                });

            modelBuilder.Entity("Palladin.Data.Entity.MediaPVEntity", b =>
                {
                    b.Property<Guid>("MediaId");

                    b.Property<Guid>("ProjectVulnerabilityId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("IsDeleted");

                    b.HasKey("MediaId", "ProjectVulnerabilityId")
                        .HasName("FK_Media_PV");

                    b.HasIndex("ProjectVulnerabilityId");

                    b.ToTable("MediaProjectVultis");
                });

            modelBuilder.Entity("Palladin.Data.Entity.MenuEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<short>("Order")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("ParentId");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            Id = new Guid("100db587-84b3-4217-b8e2-fb04ecc2e256"),
                            Name = "Client",
                            Order = (short)0,
                            Path = "/projects"
                        },
                        new
                        {
                            Id = new Guid("16720e1a-bc0c-45ce-ad9c-7697e836201c"),
                            Name = "Client",
                            Order = (short)0,
                            ParentId = new Guid("100db587-84b3-4217-b8e2-fb04ecc2e256"),
                            Path = "/projects/view-details"
                        },
                        new
                        {
                            Id = new Guid("e6e3a111-78e1-427f-835b-a8e6b53d9d41"),
                            Name = "eSecurity",
                            Order = (short)0,
                            Path = "/projects"
                        },
                        new
                        {
                            Id = new Guid("ab87691e-d214-40f0-8544-c715c3ce4b56"),
                            Name = "eSecurity",
                            Order = (short)0,
                            ParentId = new Guid("e6e3a111-78e1-427f-835b-a8e6b53d9d41"),
                            Path = "/projects/create"
                        },
                        new
                        {
                            Id = new Guid("5bf33c9a-d0de-4f18-8a99-04d4a197dbd1"),
                            Name = "eSecurity",
                            Order = (short)1,
                            ParentId = new Guid("e6e3a111-78e1-427f-835b-a8e6b53d9d41"),
                            Path = "/projects/join"
                        },
                        new
                        {
                            Id = new Guid("baf1ba1e-ca02-452b-90b5-4f174f656f7d"),
                            Name = "eSecurity",
                            Order = (short)1,
                            Path = "/vulnerabilities"
                        },
                        new
                        {
                            Id = new Guid("c88f87c1-4e87-424a-9096-f43aaf210a64"),
                            Name = "eSecurity",
                            Order = (short)0,
                            ParentId = new Guid("baf1ba1e-ca02-452b-90b5-4f174f656f7d"),
                            Path = "/vulnerabilities/create"
                        });
                });

            modelBuilder.Entity("Palladin.Data.Entity.MethodProtocolEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<short>("ProjectType")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("MethodProtocols");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f7b3a370-6ccc-46f8-b5e9-8d8babae1bcb"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "GET",
                            ProjectType = (short)0
                        },
                        new
                        {
                            Id = new Guid("252e1bb1-bb79-4188-b0e5-e895cdfe0a12"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "POST",
                            ProjectType = (short)0
                        },
                        new
                        {
                            Id = new Guid("a9e4a15f-a3b6-482d-a61f-f9ae929681bf"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "PUT",
                            ProjectType = (short)0
                        },
                        new
                        {
                            Id = new Guid("6bdd1943-66e8-41a9-9662-79b602c02df9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "DELETE",
                            ProjectType = (short)0
                        },
                        new
                        {
                            Id = new Guid("d4607f91-cc0c-4b6c-94c9-6c8634df9cca"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "IP",
                            ProjectType = (short)1
                        },
                        new
                        {
                            Id = new Guid("7a5b840b-808a-4ca2-9ded-e028a9ace417"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "FTP",
                            ProjectType = (short)1
                        },
                        new
                        {
                            Id = new Guid("2edb9536-02cf-426e-8bd7-068dbb5d0416"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "SSH",
                            ProjectType = (short)1
                        },
                        new
                        {
                            Id = new Guid("839c6311-2264-47cc-a3c8-a4ba478038e9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "SSL",
                            ProjectType = (short)1
                        },
                        new
                        {
                            Id = new Guid("7a12b770-65fd-4d1f-82ee-6ccb117b5de5"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "TELNET",
                            ProjectType = (short)1
                        },
                        new
                        {
                            Id = new Guid("4d59b5d8-26bb-4550-a732-318cfa25d187"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "SMTP",
                            ProjectType = (short)1
                        },
                        new
                        {
                            Id = new Guid("0acbea9d-6369-42e5-ba1b-723e6781d46f"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "POP3",
                            ProjectType = (short)1
                        },
                        new
                        {
                            Id = new Guid("28791c88-6096-4b1e-8859-210933b89f89"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "IMAP4",
                            ProjectType = (short)1
                        },
                        new
                        {
                            Id = new Guid("8803c3cd-2c7d-4218-806b-2cc055b9608a"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "HTTP",
                            ProjectType = (short)1
                        },
                        new
                        {
                            Id = new Guid("8265a8e8-6d5f-4cb7-ade4-1e18e905d3e2"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "HTTPS",
                            ProjectType = (short)1
                        },
                        new
                        {
                            Id = new Guid("b85812c6-ef6a-4566-9aa0-6690af3341c6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "SIP",
                            ProjectType = (short)1
                        });
                });

            modelBuilder.Entity("Palladin.Data.Entity.ProjectEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InitialDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(80)");

                    b.Property<short>("ProjectType")
                        .HasColumnType("smallint");

                    b.Property<string>("Subsidiary")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = new Guid("58073de5-84f0-4961-a6cd-b1525c2c9a88"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateTime(2019, 11, 25, 21, 12, 27, 525, DateTimeKind.Utc).AddTicks(1512),
                            InitialDate = new DateTime(2019, 11, 18, 21, 12, 27, 525, DateTimeKind.Utc).AddTicks(1122),
                            IsDeleted = false,
                            Name = "Projeto 01 [Web]: <br />Domínio: http://www.siteinseguro.com.br/",
                            ProjectType = (short)0,
                            Subsidiary = "Subsidiária"
                        });
                });

            modelBuilder.Entity("Palladin.Data.Entity.ProjectVulnerabilityEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Environment")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("FiledOrCookieName");

                    b.Property<bool>("IsDeleted");

                    b.Property<Guid>("MethodProtocolId");

                    b.Property<string>("Observation")
                        .HasColumnType("text");

                    b.Property<string>("Port")
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("ProjectId");

                    b.Property<short>("Status")
                        .HasColumnType("smallint");

                    b.Property<Guid>("UserId");

                    b.Property<Guid>("VulnerabilityId");

                    b.HasKey("Id");

                    b.HasIndex("MethodProtocolId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.HasIndex("VulnerabilityId");

                    b.ToTable("ProjectsVulnerability");

                    b.HasData(
                        new
                        {
                            Id = new Guid("23cb8bd2-1163-4e13-a57c-6ecb23ef3101"),
                            CreatedDate = new DateTime(2019, 11, 8, 21, 12, 27, 525, DateTimeKind.Utc).AddTicks(3913),
                            Environment = "register.php",
                            FiledOrCookieName = "password",
                            IsDeleted = false,
                            MethodProtocolId = new Guid("252e1bb1-bb79-4188-b0e5-e895cdfe0a12"),
                            Port = "80",
                            ProjectId = new Guid("58073de5-84f0-4961-a6cd-b1525c2c9a88"),
                            Status = (short)1,
                            UserId = new Guid("4b4ee7d4-80eb-47c2-98bc-6c3e1bd06f7e"),
                            VulnerabilityId = new Guid("a6ed278a-92a7-4d09-9fe4-52aed8091f70")
                        },
                        new
                        {
                            Id = new Guid("6786ac87-8166-4e0c-813d-d0b5d4391886"),
                            CreatedDate = new DateTime(2019, 11, 8, 21, 12, 27, 525, DateTimeKind.Utc).AddTicks(6896),
                            Environment = "register.php",
                            FiledOrCookieName = "retype-password",
                            IsDeleted = false,
                            MethodProtocolId = new Guid("252e1bb1-bb79-4188-b0e5-e895cdfe0a12"),
                            Port = "80",
                            ProjectId = new Guid("58073de5-84f0-4961-a6cd-b1525c2c9a88"),
                            Status = (short)1,
                            UserId = new Guid("4b4ee7d4-80eb-47c2-98bc-6c3e1bd06f7e"),
                            VulnerabilityId = new Guid("a6ed278a-92a7-4d09-9fe4-52aed8091f70")
                        },
                        new
                        {
                            Id = new Guid("07316f55-c7fd-4d59-abb3-9fa5f7c240b9"),
                            CreatedDate = new DateTime(2019, 11, 8, 21, 12, 27, 525, DateTimeKind.Utc).AddTicks(6916),
                            Environment = "contato.php",
                            FiledOrCookieName = "name",
                            IsDeleted = false,
                            MethodProtocolId = new Guid("252e1bb1-bb79-4188-b0e5-e895cdfe0a12"),
                            Port = "80",
                            ProjectId = new Guid("58073de5-84f0-4961-a6cd-b1525c2c9a88"),
                            Status = (short)1,
                            UserId = new Guid("4b4ee7d4-80eb-47c2-98bc-6c3e1bd06f7e"),
                            VulnerabilityId = new Guid("cef9fe0b-482a-421a-b3bb-e092607f2aa0")
                        });
                });

            modelBuilder.Entity("Palladin.Data.Entity.RefreshTokenEntity", b =>
                {
                    b.Property<string>("Token")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationDate");

                    b.Property<DateTime>("ExpirationDate");

                    b.Property<bool>("IsInvalided");

                    b.Property<bool>("IsUsed");

                    b.Property<string>("JwtId");

                    b.Property<Guid>("UserId");

                    b.HasKey("Token");

                    b.ToTable("RefreshTokenEntity");
                });

            modelBuilder.Entity("Palladin.Data.Entity.RoleEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<short>("Level")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .HasMaxLength(60);

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b4e07036-f629-4635-86f5-0d5ea620299b"),
                            Level = (short)9,
                            Name = "admin"
                        },
                        new
                        {
                            Id = new Guid("7f56a0c5-c2f3-48c8-9c06-3c5c8e83062a"),
                            Level = (short)0,
                            Name = "contributor"
                        });
                });

            modelBuilder.Entity("Palladin.Data.Entity.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("IsBlocked");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<Guid?>("MenuId");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("ProjectId");

                    b.Property<string>("UserName");

                    b.Property<short>("UserType")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.HasIndex("MenuId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("361f362b-8100-41bb-8475-fd71b1a0eb2f"),
                            CreatedDate = new DateTime(2019, 6, 21, 18, 12, 27, 521, DateTimeKind.Local).AddTicks(5808),
                            Email = "diego@cliente.com",
                            IsBlocked = false,
                            IsDeleted = false,
                            Login = "201909192112",
                            Password = "ABHTT1EXWP4xRNB2g/SxaA==",
                            UserName = "Diego Sanches",
                            UserType = (short)1
                        },
                        new
                        {
                            Id = new Guid("4b4ee7d4-80eb-47c2-98bc-6c3e1bd06f7e"),
                            CreatedDate = new DateTime(2019, 6, 21, 18, 12, 27, 523, DateTimeKind.Local).AddTicks(3939),
                            Email = "adm@esecurity.com",
                            IsBlocked = false,
                            IsDeleted = false,
                            Login = "201909192212",
                            Password = "yf5CUBl5COMEEjiKlvV1Jno7buPOw+a0EE4UyxGPjU4=",
                            UserName = "Administrador [eSecurity]",
                            UserType = (short)0
                        });
                });

            modelBuilder.Entity("Palladin.Data.Entity.UserMenuEntity", b =>
                {
                    b.Property<Guid>("MenuId");

                    b.Property<Guid>("UserId");

                    b.HasKey("MenuId", "UserId")
                        .HasName("FK_Menu_User");

                    b.HasIndex("UserId");

                    b.ToTable("UserMenuEntity");

                    b.HasData(
                        new
                        {
                            MenuId = new Guid("100db587-84b3-4217-b8e2-fb04ecc2e256"),
                            UserId = new Guid("361f362b-8100-41bb-8475-fd71b1a0eb2f")
                        },
                        new
                        {
                            MenuId = new Guid("e6e3a111-78e1-427f-835b-a8e6b53d9d41"),
                            UserId = new Guid("4b4ee7d4-80eb-47c2-98bc-6c3e1bd06f7e")
                        },
                        new
                        {
                            MenuId = new Guid("baf1ba1e-ca02-452b-90b5-4f174f656f7d"),
                            UserId = new Guid("4b4ee7d4-80eb-47c2-98bc-6c3e1bd06f7e")
                        });
                });

            modelBuilder.Entity("Palladin.Data.Entity.UserRoleEntity", b =>
                {
                    b.Property<Guid>("UserId");

                    b.Property<Guid>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UsersRoles");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("4b4ee7d4-80eb-47c2-98bc-6c3e1bd06f7e"),
                            RoleId = new Guid("b4e07036-f629-4635-86f5-0d5ea620299b")
                        },
                        new
                        {
                            UserId = new Guid("4b4ee7d4-80eb-47c2-98bc-6c3e1bd06f7e"),
                            RoleId = new Guid("7f56a0c5-c2f3-48c8-9c06-3c5c8e83062a")
                        });
                });

            modelBuilder.Entity("Palladin.Data.Entity.VulnerabilityEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CVSS")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<short>("ProjectType")
                        .HasColumnType("smallint");

                    b.Property<string>("References")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<short>("RiskFactor")
                        .HasColumnType("smallint");

                    b.Property<string>("Tags")
                        .HasColumnType("text");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Vulnerabilities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a6ed278a-92a7-4d09-9fe4-52aed8091f70"),
                            CVSS = "AV:N/AV:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
                            CreatedDate = new DateTime(2019, 9, 19, 18, 12, 27, 524, DateTimeKind.Local).AddTicks(1021),
                            IsDeleted = false,
                            Name = "Weak Password Policy",
                            ProjectType = (short)0,
                            References = "http://www.owasp.org/index.php/Testing_for_Weak_password_policy",
                            RiskFactor = (short)3,
                            Tags = "password,weak-password,weak-password-policy,password-policy",
                            UserId = new Guid("4b4ee7d4-80eb-47c2-98bc-6c3e1bd06f7e")
                        },
                        new
                        {
                            Id = new Guid("cef9fe0b-482a-421a-b3bb-e092607f2aa0"),
                            CVSS = "AV:N/AV:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
                            CreatedDate = new DateTime(2019, 9, 19, 18, 12, 27, 524, DateTimeKind.Local).AddTicks(3534),
                            IsDeleted = false,
                            Name = "Buffer overflow",
                            ProjectType = (short)0,
                            References = "http://www.owasp.org/index.php/buffer_overflow_field",
                            RiskFactor = (short)3,
                            Tags = "field-validation,field-weak",
                            UserId = new Guid("4b4ee7d4-80eb-47c2-98bc-6c3e1bd06f7e")
                        });
                });

            modelBuilder.Entity("Palladin.Data.Entity.VulnerabilityLangEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted");

                    b.Property<short>("LanguageType")
                        .HasColumnType("smallint");

                    b.Property<string>("Remediation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("VulnerabilityId");

                    b.HasKey("Id");

                    b.HasIndex("VulnerabilityId");

                    b.ToTable("VulnerabilityLangs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b8a100e1-a485-453f-8d09-7b05a15fa6bb"),
                            CreatedDate = new DateTime(2019, 9, 19, 18, 12, 27, 524, DateTimeKind.Local).AddTicks(4534),
                            Description = @"The application does not require users to have strong passwords. The lack of password complexity significantly reduces search space by trying to guess user passwords, facilitating brute force attacks.
                    Thus,
                    it was possible to gain access to the system using a user account that has weak password and easy guessing. From the accessed account,
                    A new account has been created.",
                            IsDeleted = false,
                            LanguageType = (short)1,
                            Remediation = @"Enter a strong password policy (which ensures password length, complexity, reuse and aging) and / or
                    additional authentication controls (double factor authentication).",
                            VulnerabilityId = new Guid("a6ed278a-92a7-4d09-9fe4-52aed8091f70")
                        },
                        new
                        {
                            Id = new Guid("dc68ca5b-b60f-48f4-be3e-076f81ebac31"),
                            CreatedDate = new DateTime(2019, 9, 19, 18, 12, 27, 524, DateTimeKind.Local).AddTicks(6577),
                            Description = @"A aplicação não exige que os usuários tenham senhas fortes. A falta de complexidade de senha reduz significamente o espaço de busca ao tentar adivinhar as senhas dos usuários, facilitando ataques de força bruta.
                    Dessa forma,
                    foi possível obter acesso ao sistema utilizando uma conta de usuário que possui senha fraca e de fácil adivinhação.A partir da conta acessada,
                    uma nova conta foi criada.",
                            IsDeleted = false,
                            LanguageType = (short)0,
                            Remediation = @"Introduza uma política de senha forte (que garanta o tamanho, a complexidade, a reutilização e o envelhecimento da senha) e/ou
                    controles de autenticação adicionais (duplo fator de autenticação).",
                            VulnerabilityId = new Guid("a6ed278a-92a7-4d09-9fe4-52aed8091f70")
                        },
                        new
                        {
                            Id = new Guid("a6369c62-0c16-47b8-8da7-754e8c65dc9f"),
                            CreatedDate = new DateTime(2019, 9, 19, 18, 12, 27, 524, DateTimeKind.Local).AddTicks(6595),
                            Description = @"La aplicación no requiere que los usuarios tengan contraseñas seguras. La falta de complejidad de la contraseña reduce significativamente el espacio de búsqueda al tratar de adivinar las contraseñas de los usuarios, lo que facilita los ataques de fuerza bruta.
                    De esa forma,
                    fue posible obtener acceso al sistema utilizando una cuenta de usuario que tiene una contraseña débil y fácil de adivinar.
                    Se ha creado una nueva cuenta.",
                            IsDeleted = false,
                            LanguageType = (short)2,
                            Remediation = @"Ingrese una política de contraseña segura (que asegure la longitud, complejidad, reutilización y antigüedad de la contraseña) y / o
                    controles de autenticación adicionales (autenticación de doble factor).",
                            VulnerabilityId = new Guid("a6ed278a-92a7-4d09-9fe4-52aed8091f70")
                        });
                });

            modelBuilder.Entity("Palladin.Data.Entity.MediaPVEntity", b =>
                {
                    b.HasOne("Palladin.Data.Entity.MediaEntity", "Media")
                        .WithMany("MediaPVEntities")
                        .HasForeignKey("MediaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Palladin.Data.Entity.ProjectVulnerabilityEntity", "ProjectVulnerability")
                        .WithMany("MediaPVEntities")
                        .HasForeignKey("ProjectVulnerabilityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Palladin.Data.Entity.MenuEntity", b =>
                {
                    b.HasOne("Palladin.Data.Entity.MenuEntity", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("Palladin.Data.Entity.ProjectVulnerabilityEntity", b =>
                {
                    b.HasOne("Palladin.Data.Entity.MethodProtocolEntity", "MethodProtocol")
                        .WithMany()
                        .HasForeignKey("MethodProtocolId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Palladin.Data.Entity.ProjectEntity", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Palladin.Data.Entity.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Palladin.Data.Entity.VulnerabilityEntity", "Vulnerability")
                        .WithOne("ProjectVulnerability")
                        .HasForeignKey("Palladin.Data.Entity.ProjectVulnerabilityEntity", "VulnerabilityId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Palladin.Data.Entity.UserEntity", b =>
                {
                    b.HasOne("Palladin.Data.Entity.MenuEntity", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId");

                    b.HasOne("Palladin.Data.Entity.ProjectEntity", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");
                });

            modelBuilder.Entity("Palladin.Data.Entity.UserMenuEntity", b =>
                {
                    b.HasOne("Palladin.Data.Entity.MenuEntity", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Palladin.Data.Entity.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Palladin.Data.Entity.UserRoleEntity", b =>
                {
                    b.HasOne("Palladin.Data.Entity.RoleEntity", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Palladin.Data.Entity.UserEntity", "User")
                        .WithMany("Roles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Palladin.Data.Entity.VulnerabilityEntity", b =>
                {
                    b.HasOne("Palladin.Data.Entity.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Palladin.Data.Entity.VulnerabilityLangEntity", b =>
                {
                    b.HasOne("Palladin.Data.Entity.VulnerabilityEntity", "Vulnerability")
                        .WithMany("Vulnerabilities")
                        .HasForeignKey("VulnerabilityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
