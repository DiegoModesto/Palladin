// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Palladin.Data.EntityFramework;

namespace Palladin.Data.EntityFramework.Migrations
{
    [DbContext(typeof(PalladinContext))]
    partial class PalladinContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Palladin.Data.Entity.CompanyEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("MasterCompany")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9c4e7692-b1ac-4936-94bc-a94bb4e3e4fd"),
                            CreatedDate = new DateTime(2019, 7, 10, 11, 30, 22, 635, DateTimeKind.Local).AddTicks(6690),
                            IsDeleted = false,
                            MasterCompany = true,
                            Name = "eSecurity"
                        },
                        new
                        {
                            Id = new Guid("7e740af1-b6e7-4496-aee9-5f359c838d35"),
                            CreatedDate = new DateTime(2019, 7, 10, 11, 30, 22, 637, DateTimeKind.Local).AddTicks(7327),
                            IsDeleted = false,
                            MasterCompany = false,
                            Name = "Custom Company"
                        });
                });

            modelBuilder.Entity("Palladin.Data.Entity.MediaEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Archive")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasMaxLength(2500);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("Medias");
                });

            modelBuilder.Entity("Palladin.Data.Entity.MediaPVEntity", b =>
                {
                    b.Property<Guid>("MediaId");

                    b.Property<Guid>("ProjectVulnerabilityId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("IsDeleted");

                    b.HasKey("MediaId", "ProjectVulnerabilityId")
                        .HasName("FK_Media_PV");

                    b.HasIndex("ProjectVulnerabilityId");

                    b.ToTable("MediaProjectVultis");
                });

            modelBuilder.Entity("Palladin.Data.Entity.MenuEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<short>("Order")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("ParentId");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ab7f20bd-2297-4efa-8209-cb97f180e815"),
                            Name = "Client",
                            Order = (short)0,
                            Path = "/projects"
                        },
                        new
                        {
                            Id = new Guid("ad4b22e0-334b-4332-8dbb-4cf68f09afef"),
                            Name = "Client",
                            Order = (short)0,
                            ParentId = new Guid("ab7f20bd-2297-4efa-8209-cb97f180e815"),
                            Path = "/projects/view-details"
                        },
                        new
                        {
                            Id = new Guid("3da1214e-da37-4ee6-8a08-097b113ab714"),
                            Name = "eSecurity",
                            Order = (short)0,
                            Path = "/projects"
                        },
                        new
                        {
                            Id = new Guid("54c067f3-a87e-4aa2-9682-28c3806c6145"),
                            Name = "eSecurity",
                            Order = (short)0,
                            ParentId = new Guid("3da1214e-da37-4ee6-8a08-097b113ab714"),
                            Path = "/projects/create"
                        },
                        new
                        {
                            Id = new Guid("16b859ea-e3bd-43ec-9576-075b436a4ee5"),
                            Name = "eSecurity",
                            Order = (short)1,
                            ParentId = new Guid("3da1214e-da37-4ee6-8a08-097b113ab714"),
                            Path = "/projects/join"
                        },
                        new
                        {
                            Id = new Guid("7716ae3e-86c7-42c5-a18b-230e6ebffb8b"),
                            Name = "eSecurity",
                            Order = (short)1,
                            Path = "/vulnerabilities"
                        },
                        new
                        {
                            Id = new Guid("51ad8377-bbe2-41f2-973d-c17720289763"),
                            Name = "eSecurity",
                            Order = (short)0,
                            ParentId = new Guid("7716ae3e-86c7-42c5-a18b-230e6ebffb8b"),
                            Path = "/vulnerabilities/create"
                        });
                });

            modelBuilder.Entity("Palladin.Data.Entity.MethodProtocolEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<short>("ProjectType")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("MethodProtocols");

                    b.HasData(
                        new
                        {
                            Id = new Guid("07706ac6-b130-4ad5-b109-abff059bd3f4"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "GET",
                            ProjectType = (short)0
                        },
                        new
                        {
                            Id = new Guid("1c7b67f2-d79a-4804-b626-16c826c6870d"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "POST",
                            ProjectType = (short)0
                        },
                        new
                        {
                            Id = new Guid("d8ac6cd3-3f6e-4d56-9589-8297d17d03df"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "PUT",
                            ProjectType = (short)0
                        },
                        new
                        {
                            Id = new Guid("170ff1d8-525c-4ca2-99a3-2067bb61a5a5"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "DELETE",
                            ProjectType = (short)0
                        },
                        new
                        {
                            Id = new Guid("dad9b360-fb83-4b3e-8fea-188be8aa0b61"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "IP",
                            ProjectType = (short)1
                        },
                        new
                        {
                            Id = new Guid("e1a264ef-b58b-4f15-8eee-69ec2e0d6f86"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "FTP",
                            ProjectType = (short)1
                        },
                        new
                        {
                            Id = new Guid("a63c67f1-02a9-4423-a066-61300db747df"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "SSH",
                            ProjectType = (short)1
                        },
                        new
                        {
                            Id = new Guid("a32cf0e4-38e7-457a-8320-5b19edaa62c0"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "SSL",
                            ProjectType = (short)1
                        },
                        new
                        {
                            Id = new Guid("cdb2ae67-48cc-49a8-b849-7c0a538dcb32"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "TELNET",
                            ProjectType = (short)1
                        },
                        new
                        {
                            Id = new Guid("5fc94903-beab-4e40-a64f-c7351511910e"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "SMTP",
                            ProjectType = (short)1
                        },
                        new
                        {
                            Id = new Guid("8e969de9-4557-4516-831d-87896014ec0a"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "POP3",
                            ProjectType = (short)1
                        },
                        new
                        {
                            Id = new Guid("a511a9a3-746b-48da-a36a-fdfa6035983f"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "IMAP4",
                            ProjectType = (short)1
                        },
                        new
                        {
                            Id = new Guid("ba981dba-4aa9-495a-b575-95f119e415e9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "HTTP",
                            ProjectType = (short)1
                        },
                        new
                        {
                            Id = new Guid("41f5cf29-eeea-4c6b-94d8-1f0b4cb2bca2"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "HTTPS",
                            ProjectType = (short)1
                        },
                        new
                        {
                            Id = new Guid("8ba96235-61db-4364-aefb-1597b72d415b"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "SIP",
                            ProjectType = (short)1
                        });
                });

            modelBuilder.Entity("Palladin.Data.Entity.ProjectEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InitialDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(80)");

                    b.Property<short>("ProjectType")
                        .HasColumnType("smallint");

                    b.Property<string>("Subsidiary")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2407d083-3301-4ecf-800b-6a7b8b6d2e0d"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDate = new DateTime(2019, 12, 14, 14, 30, 22, 640, DateTimeKind.Utc).AddTicks(9137),
                            InitialDate = new DateTime(2019, 12, 7, 14, 30, 22, 640, DateTimeKind.Utc).AddTicks(8752),
                            IsDeleted = false,
                            Name = "Projeto 01 [Web]: <br />Domínio: http://www.siteinseguro.com.br/",
                            ProjectType = (short)0,
                            Subsidiary = "Subsidiária"
                        });
                });

            modelBuilder.Entity("Palladin.Data.Entity.ProjectVulnerabilityEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Environment")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("FiledOrCookieName");

                    b.Property<bool>("IsDeleted");

                    b.Property<Guid>("MethodProtocolId");

                    b.Property<string>("Observation")
                        .HasColumnType("text");

                    b.Property<string>("Port")
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("ProjectId");

                    b.Property<short>("Status")
                        .HasColumnType("smallint");

                    b.Property<Guid>("UserId");

                    b.Property<Guid>("VulnerabilityId");

                    b.HasKey("Id");

                    b.HasIndex("MethodProtocolId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.HasIndex("VulnerabilityId");

                    b.ToTable("ProjectsVulnerability");

                    b.HasData(
                        new
                        {
                            Id = new Guid("24b8f71b-d0b2-4fe4-a947-65e5caf20516"),
                            CreatedDate = new DateTime(2019, 11, 27, 14, 30, 22, 641, DateTimeKind.Utc).AddTicks(1466),
                            Environment = "register.php",
                            FiledOrCookieName = "password",
                            IsDeleted = false,
                            MethodProtocolId = new Guid("1c7b67f2-d79a-4804-b626-16c826c6870d"),
                            Port = "80",
                            ProjectId = new Guid("2407d083-3301-4ecf-800b-6a7b8b6d2e0d"),
                            Status = (short)1,
                            UserId = new Guid("012d8159-efbd-4aa9-854c-c624ffaf8afe"),
                            VulnerabilityId = new Guid("6cf22d19-8a6b-48b2-9373-c08d0d5eb7e6")
                        },
                        new
                        {
                            Id = new Guid("2c98ae90-8391-4770-b298-bfe6182fdfb2"),
                            CreatedDate = new DateTime(2019, 11, 27, 14, 30, 22, 641, DateTimeKind.Utc).AddTicks(4374),
                            Environment = "register.php",
                            FiledOrCookieName = "retype-password",
                            IsDeleted = false,
                            MethodProtocolId = new Guid("1c7b67f2-d79a-4804-b626-16c826c6870d"),
                            Port = "80",
                            ProjectId = new Guid("2407d083-3301-4ecf-800b-6a7b8b6d2e0d"),
                            Status = (short)1,
                            UserId = new Guid("012d8159-efbd-4aa9-854c-c624ffaf8afe"),
                            VulnerabilityId = new Guid("6cf22d19-8a6b-48b2-9373-c08d0d5eb7e6")
                        },
                        new
                        {
                            Id = new Guid("bef6203f-f2d1-4318-bf25-5386985f1477"),
                            CreatedDate = new DateTime(2019, 11, 27, 14, 30, 22, 641, DateTimeKind.Utc).AddTicks(4398),
                            Environment = "contato.php",
                            FiledOrCookieName = "name",
                            IsDeleted = false,
                            MethodProtocolId = new Guid("1c7b67f2-d79a-4804-b626-16c826c6870d"),
                            Port = "80",
                            ProjectId = new Guid("2407d083-3301-4ecf-800b-6a7b8b6d2e0d"),
                            Status = (short)1,
                            UserId = new Guid("012d8159-efbd-4aa9-854c-c624ffaf8afe"),
                            VulnerabilityId = new Guid("051320f5-a68f-44a5-8ecd-e3f4c016ad61")
                        });
                });

            modelBuilder.Entity("Palladin.Data.Entity.RefreshTokenEntity", b =>
                {
                    b.Property<string>("Token")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationDate");

                    b.Property<DateTime>("ExpirationDate");

                    b.Property<bool>("IsInvalided");

                    b.Property<bool>("IsUsed");

                    b.Property<string>("JwtId");

                    b.Property<Guid>("UserId");

                    b.HasKey("Token");

                    b.ToTable("RefreshTokenEntity");
                });

            modelBuilder.Entity("Palladin.Data.Entity.RoleEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<short>("Level")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .HasMaxLength(60);

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b98569e2-509e-4f50-b5c3-668ee708de9e"),
                            Level = (short)9,
                            Name = "admin"
                        },
                        new
                        {
                            Id = new Guid("3a4d024d-1559-42fd-832f-5d11fed20e26"),
                            Level = (short)0,
                            Name = "contributor"
                        });
                });

            modelBuilder.Entity("Palladin.Data.Entity.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CompanyId");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("IsBlocked");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<Guid?>("MenuId");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("ProjectId");

                    b.Property<string>("UserName");

                    b.Property<short>("UserType")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.HasIndex("MenuId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("34996227-583a-4352-9833-592c10cd00a1"),
                            CompanyId = new Guid("9c4e7692-b1ac-4936-94bc-a94bb4e3e4fd"),
                            CreatedDate = new DateTime(2019, 7, 10, 11, 30, 22, 639, DateTimeKind.Local).AddTicks(4046),
                            Email = "diego@cliente.com",
                            IsBlocked = false,
                            IsDeleted = false,
                            Login = "201910081430",
                            Password = "ABHTT1EXWP4xRNB2g/SxaA==",
                            UserName = "Diego Sanches",
                            UserType = (short)1
                        },
                        new
                        {
                            Id = new Guid("012d8159-efbd-4aa9-854c-c624ffaf8afe"),
                            CompanyId = new Guid("7e740af1-b6e7-4496-aee9-5f359c838d35"),
                            CreatedDate = new DateTime(2019, 7, 10, 11, 30, 22, 639, DateTimeKind.Local).AddTicks(4956),
                            Email = "adm@esecurity.com",
                            IsBlocked = false,
                            IsDeleted = false,
                            Login = "201910081530",
                            Password = "yf5CUBl5COMEEjiKlvV1Jno7buPOw+a0EE4UyxGPjU4=",
                            UserName = "Administrador [eSecurity]",
                            UserType = (short)0
                        });
                });

            modelBuilder.Entity("Palladin.Data.Entity.UserMenuEntity", b =>
                {
                    b.Property<Guid>("MenuId");

                    b.Property<Guid>("UserId");

                    b.HasKey("MenuId", "UserId")
                        .HasName("FK_Menu_User");

                    b.HasIndex("UserId");

                    b.ToTable("UserMenuEntity");

                    b.HasData(
                        new
                        {
                            MenuId = new Guid("ab7f20bd-2297-4efa-8209-cb97f180e815"),
                            UserId = new Guid("34996227-583a-4352-9833-592c10cd00a1")
                        },
                        new
                        {
                            MenuId = new Guid("3da1214e-da37-4ee6-8a08-097b113ab714"),
                            UserId = new Guid("012d8159-efbd-4aa9-854c-c624ffaf8afe")
                        },
                        new
                        {
                            MenuId = new Guid("7716ae3e-86c7-42c5-a18b-230e6ebffb8b"),
                            UserId = new Guid("012d8159-efbd-4aa9-854c-c624ffaf8afe")
                        });
                });

            modelBuilder.Entity("Palladin.Data.Entity.UserRoleEntity", b =>
                {
                    b.Property<Guid>("UserId");

                    b.Property<Guid>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UsersRoles");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("012d8159-efbd-4aa9-854c-c624ffaf8afe"),
                            RoleId = new Guid("b98569e2-509e-4f50-b5c3-668ee708de9e")
                        },
                        new
                        {
                            UserId = new Guid("012d8159-efbd-4aa9-854c-c624ffaf8afe"),
                            RoleId = new Guid("3a4d024d-1559-42fd-832f-5d11fed20e26")
                        });
                });

            modelBuilder.Entity("Palladin.Data.Entity.VulnerabilityEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CVSS")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<short>("ProjectType")
                        .HasColumnType("smallint");

                    b.Property<string>("References")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<short>("RiskFactor")
                        .HasColumnType("smallint");

                    b.Property<string>("Tags")
                        .HasColumnType("text");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Vulnerabilities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6cf22d19-8a6b-48b2-9373-c08d0d5eb7e6"),
                            CVSS = "AV:N/AV:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
                            CreatedDate = new DateTime(2019, 10, 8, 11, 30, 22, 639, DateTimeKind.Local).AddTicks(9939),
                            IsDeleted = false,
                            Name = "Weak Password Policy",
                            ProjectType = (short)0,
                            References = "http://www.owasp.org/index.php/Testing_for_Weak_password_policy",
                            RiskFactor = (short)3,
                            Tags = "password,weak-password,weak-password-policy,password-policy",
                            UserId = new Guid("012d8159-efbd-4aa9-854c-c624ffaf8afe")
                        },
                        new
                        {
                            Id = new Guid("051320f5-a68f-44a5-8ecd-e3f4c016ad61"),
                            CVSS = "AV:N/AV:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
                            CreatedDate = new DateTime(2019, 10, 8, 11, 30, 22, 640, DateTimeKind.Local).AddTicks(3031),
                            IsDeleted = false,
                            Name = "Buffer overflow",
                            ProjectType = (short)0,
                            References = "http://www.owasp.org/index.php/buffer_overflow_field",
                            RiskFactor = (short)3,
                            Tags = "field-validation,field-weak",
                            UserId = new Guid("012d8159-efbd-4aa9-854c-c624ffaf8afe")
                        });
                });

            modelBuilder.Entity("Palladin.Data.Entity.VulnerabilityLangEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted");

                    b.Property<short>("LanguageType")
                        .HasColumnType("smallint");

                    b.Property<string>("Remediation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("VulnerabilityId");

                    b.HasKey("Id");

                    b.HasIndex("VulnerabilityId");

                    b.ToTable("VulnerabilityLangs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4da2dc2b-a14f-4064-a1ec-a006b1d7b7ab"),
                            CreatedDate = new DateTime(2019, 10, 8, 11, 30, 22, 640, DateTimeKind.Local).AddTicks(3973),
                            Description = @"The application does not require users to have strong passwords. The lack of password complexity significantly reduces search space by trying to guess user passwords, facilitating brute force attacks.
                    Thus,
                    it was possible to gain access to the system using a user account that has weak password and easy guessing. From the accessed account,
                    A new account has been created.",
                            IsDeleted = false,
                            LanguageType = (short)1,
                            Remediation = @"Enter a strong password policy (which ensures password length, complexity, reuse and aging) and / or
                    additional authentication controls (double factor authentication).",
                            VulnerabilityId = new Guid("6cf22d19-8a6b-48b2-9373-c08d0d5eb7e6")
                        },
                        new
                        {
                            Id = new Guid("c581eb3f-8817-469e-83e4-8ae5c2211d7a"),
                            CreatedDate = new DateTime(2019, 10, 8, 11, 30, 22, 640, DateTimeKind.Local).AddTicks(5451),
                            Description = @"A aplicação não exige que os usuários tenham senhas fortes. A falta de complexidade de senha reduz significamente o espaço de busca ao tentar adivinhar as senhas dos usuários, facilitando ataques de força bruta.
                    Dessa forma,
                    foi possível obter acesso ao sistema utilizando uma conta de usuário que possui senha fraca e de fácil adivinhação.A partir da conta acessada,
                    uma nova conta foi criada.",
                            IsDeleted = false,
                            LanguageType = (short)0,
                            Remediation = @"Introduza uma política de senha forte (que garanta o tamanho, a complexidade, a reutilização e o envelhecimento da senha) e/ou
                    controles de autenticação adicionais (duplo fator de autenticação).",
                            VulnerabilityId = new Guid("6cf22d19-8a6b-48b2-9373-c08d0d5eb7e6")
                        },
                        new
                        {
                            Id = new Guid("b7ea1e53-5390-4e82-a5f1-3d5a09a716ae"),
                            CreatedDate = new DateTime(2019, 10, 8, 11, 30, 22, 640, DateTimeKind.Local).AddTicks(5473),
                            Description = @"La aplicación no requiere que los usuarios tengan contraseñas seguras. La falta de complejidad de la contraseña reduce significativamente el espacio de búsqueda al tratar de adivinar las contraseñas de los usuarios, lo que facilita los ataques de fuerza bruta.
                    De esa forma,
                    fue posible obtener acceso al sistema utilizando una cuenta de usuario que tiene una contraseña débil y fácil de adivinar.
                    Se ha creado una nueva cuenta.",
                            IsDeleted = false,
                            LanguageType = (short)2,
                            Remediation = @"Ingrese una política de contraseña segura (que asegure la longitud, complejidad, reutilización y antigüedad de la contraseña) y / o
                    controles de autenticación adicionales (autenticación de doble factor).",
                            VulnerabilityId = new Guid("6cf22d19-8a6b-48b2-9373-c08d0d5eb7e6")
                        });
                });

            modelBuilder.Entity("Palladin.Data.Entity.MediaPVEntity", b =>
                {
                    b.HasOne("Palladin.Data.Entity.MediaEntity", "Media")
                        .WithMany("MediaPVEntities")
                        .HasForeignKey("MediaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Palladin.Data.Entity.ProjectVulnerabilityEntity", "ProjectVulnerability")
                        .WithMany("MediaPVEntities")
                        .HasForeignKey("ProjectVulnerabilityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Palladin.Data.Entity.MenuEntity", b =>
                {
                    b.HasOne("Palladin.Data.Entity.MenuEntity", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("Palladin.Data.Entity.ProjectVulnerabilityEntity", b =>
                {
                    b.HasOne("Palladin.Data.Entity.MethodProtocolEntity", "MethodProtocol")
                        .WithMany()
                        .HasForeignKey("MethodProtocolId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Palladin.Data.Entity.ProjectEntity", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Palladin.Data.Entity.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Palladin.Data.Entity.VulnerabilityEntity", "Vulnerability")
                        .WithOne("ProjectVulnerability")
                        .HasForeignKey("Palladin.Data.Entity.ProjectVulnerabilityEntity", "VulnerabilityId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Palladin.Data.Entity.UserEntity", b =>
                {
                    b.HasOne("Palladin.Data.Entity.CompanyEntity", "Company")
                        .WithMany("Users")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Palladin.Data.Entity.MenuEntity", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId");

                    b.HasOne("Palladin.Data.Entity.ProjectEntity", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");
                });

            modelBuilder.Entity("Palladin.Data.Entity.UserMenuEntity", b =>
                {
                    b.HasOne("Palladin.Data.Entity.MenuEntity", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Palladin.Data.Entity.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Palladin.Data.Entity.UserRoleEntity", b =>
                {
                    b.HasOne("Palladin.Data.Entity.RoleEntity", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Palladin.Data.Entity.UserEntity", "User")
                        .WithMany("Roles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Palladin.Data.Entity.VulnerabilityEntity", b =>
                {
                    b.HasOne("Palladin.Data.Entity.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Palladin.Data.Entity.VulnerabilityLangEntity", b =>
                {
                    b.HasOne("Palladin.Data.Entity.VulnerabilityEntity", "Vulnerability")
                        .WithMany("Vulnerabilities")
                        .HasForeignKey("VulnerabilityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
