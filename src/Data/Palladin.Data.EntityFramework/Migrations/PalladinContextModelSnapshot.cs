// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Palladin.Data.EntityFramework;

namespace Palladin.Data.EntityFramework.Migrations
{
    [DbContext(typeof(PalladinContext))]
    partial class PalladinContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Palladin.Data.Entity.MediaEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<byte[]>("Archive");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("Medias");
                });

            modelBuilder.Entity("Palladin.Data.Entity.MediaPVEntity", b =>
                {
                    b.Property<Guid>("MediaId");

                    b.Property<Guid>("ProjectVulnerabilityId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("IsDeleted");

                    b.HasKey("MediaId", "ProjectVulnerabilityId");

                    b.HasIndex("ProjectVulnerabilityId");

                    b.ToTable("MediaProjectVultis");
                });

            modelBuilder.Entity("Palladin.Data.Entity.MenuEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ceac4f1e-8749-46a7-9ffb-a4996cc2f4f8"),
                            Name = "Client"
                        },
                        new
                        {
                            Id = new Guid("aa9a13d4-ac37-49bc-b821-6658aac46df3"),
                            Name = "eSecurity"
                        });
                });

            modelBuilder.Entity("Palladin.Data.Entity.MenuItemEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("MenuId");

                    b.Property<string>("Name");

                    b.Property<string>("Path");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.ToTable("MenusItem");

                    b.HasData(
                        new
                        {
                            Id = new Guid("871ccebc-fd54-4194-9358-9ca96c34d882"),
                            MenuId = new Guid("ceac4f1e-8749-46a7-9ffb-a4996cc2f4f8"),
                            Name = "Projetos",
                            Path = "/project"
                        },
                        new
                        {
                            Id = new Guid("7bb67908-a4e6-47a9-99a6-c8649051aa29"),
                            MenuId = new Guid("aa9a13d4-ac37-49bc-b821-6658aac46df3"),
                            Name = "Projetos",
                            Path = "/admin/project"
                        },
                        new
                        {
                            Id = new Guid("734aaa33-b704-4d2c-858b-8069ec6c4898"),
                            MenuId = new Guid("ceac4f1e-8749-46a7-9ffb-a4996cc2f4f8"),
                            Name = "Comparar Projetos",
                            Path = "/compare"
                        },
                        new
                        {
                            Id = new Guid("743c15b3-323e-4766-a970-fb2f3cbc7597"),
                            MenuId = new Guid("aa9a13d4-ac37-49bc-b821-6658aac46df3"),
                            Name = "Vulnerabilidades",
                            Path = "/admin/vulnerability"
                        },
                        new
                        {
                            Id = new Guid("4439216d-fa62-4e1a-a36e-f5e4d2aca22e"),
                            MenuId = new Guid("aa9a13d4-ac37-49bc-b821-6658aac46df3"),
                            Name = "Vinculação",
                            Path = "/admin/join-project"
                        });
                });

            modelBuilder.Entity("Palladin.Data.Entity.MethodProtocolEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<short>("ProjectType")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("MethodProtocols");
                });

            modelBuilder.Entity("Palladin.Data.Entity.ProjectEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CustomerId");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InitialDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted");

                    b.Property<short>("ProjectType")
                        .HasColumnType("smallint");

                    b.Property<string>("Subsidiary")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<Guid?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Palladin.Data.Entity.ProjectVulnerabilityEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Environment")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("FiledOrCookieName");

                    b.Property<bool>("IsDeleted");

                    b.Property<Guid>("MethodProtocolId");

                    b.Property<string>("Observation")
                        .HasColumnType("text");

                    b.Property<string>("Port")
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("ProjectId");

                    b.Property<short>("Status")
                        .HasColumnType("smallint");

                    b.Property<Guid>("VulnerabilityId");

                    b.HasKey("Id");

                    b.HasIndex("MethodProtocolId")
                        .IsUnique();

                    b.HasIndex("ProjectId")
                        .IsUnique();

                    b.HasIndex("VulnerabilityId")
                        .IsUnique();

                    b.ToTable("ProjectsVulnerability");
                });

            modelBuilder.Entity("Palladin.Data.Entity.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("0");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<Guid?>("MenuId");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<short>("UserType")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.HasIndex("MenuId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("747cbe55-8f74-474b-af7f-cd3585eff2aa"),
                            CreatedDate = new DateTime(2019, 5, 31, 18, 30, 48, 914, DateTimeKind.Local).AddTicks(5764),
                            IsDeleted = false,
                            Login = "cliente",
                            Password = "5ivWjl+ZjGohSxB1pb/U+w==",
                            UserType = (short)1
                        },
                        new
                        {
                            Id = new Guid("b43a265f-9638-495e-b589-91cb5a51c0ca"),
                            CreatedDate = new DateTime(2019, 5, 28, 18, 30, 48, 915, DateTimeKind.Local).AddTicks(6958),
                            IsDeleted = false,
                            Login = "esec",
                            Password = "TKrBGmPmSUdIcUBSa1x0+g==",
                            UserType = (short)0
                        });
                });

            modelBuilder.Entity("Palladin.Data.Entity.UserMenuEntity", b =>
                {
                    b.Property<Guid>("MenuId");

                    b.Property<Guid>("UserId");

                    b.HasKey("MenuId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserMenus");

                    b.HasData(
                        new
                        {
                            MenuId = new Guid("ceac4f1e-8749-46a7-9ffb-a4996cc2f4f8"),
                            UserId = new Guid("747cbe55-8f74-474b-af7f-cd3585eff2aa")
                        },
                        new
                        {
                            MenuId = new Guid("aa9a13d4-ac37-49bc-b821-6658aac46df3"),
                            UserId = new Guid("b43a265f-9638-495e-b589-91cb5a51c0ca")
                        });
                });

            modelBuilder.Entity("Palladin.Data.Entity.VulnerabilityEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CVSS")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.Property<short>("ProjectType")
                        .HasColumnType("smallint");

                    b.Property<string>("References")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<short>("RiskFactor")
                        .HasColumnType("smallint");

                    b.Property<string>("Tags")
                        .HasColumnType("text");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Vulnerabilities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("96dcd4b6-2676-4947-90a4-d5005c8e6b77"),
                            CVSS = "AV:N/AV:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
                            CreatedDate = new DateTime(2019, 8, 29, 18, 30, 48, 916, DateTimeKind.Local).AddTicks(5341),
                            IsDeleted = false,
                            Name = "Weak Password Policy",
                            ProjectType = (short)0,
                            References = "http://www.owasp.org/index.php/Testing_for_Weak_password_policy",
                            RiskFactor = (short)3,
                            Tags = "password,weak-password,weak-password-policy,password-policy",
                            UserId = new Guid("b43a265f-9638-495e-b589-91cb5a51c0ca")
                        });
                });

            modelBuilder.Entity("Palladin.Data.Entity.VulnerabilityLangEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted");

                    b.Property<short>("LanguageType")
                        .HasColumnType("smallint");

                    b.Property<string>("Remediation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("VulnerabilityId");

                    b.HasKey("Id");

                    b.HasIndex("VulnerabilityId");

                    b.ToTable("VulnerabilityLangs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0732a356-08a7-4854-9b66-275f292430f2"),
                            CreatedDate = new DateTime(2019, 8, 29, 18, 30, 48, 916, DateTimeKind.Local).AddTicks(9134),
                            Description = @"A aplicação não exige que os usuários tenham senhas fortes. A falta de complexidade de senha reduz significamente o espaço de busca ao tentar adivinhar as senhas dos usuários, facilitando ataques de força bruta.
                    Dessa forma,
                    foi possível obter acesso ao sistema utilizando uma conta de usuário que possui senha fraca e de fácil adivinhação.A partir da conta acessada,
                    uma nova conta foi criada.",
                            IsDeleted = false,
                            LanguageType = (short)0,
                            Remediation = @"Introduza uma política de senha forte (que garanta o tamanho, a complexidade, a reutilização e o envelhecimento da senha) e/ou
                    controles de autenticação adicionais (duplo fator de autenticação).",
                            VulnerabilityId = new Guid("96dcd4b6-2676-4947-90a4-d5005c8e6b77")
                        });
                });

            modelBuilder.Entity("Palladin.Data.Entity.MediaPVEntity", b =>
                {
                    b.HasOne("Palladin.Data.Entity.MediaEntity", "Media")
                        .WithMany("MediaPVEntities")
                        .HasForeignKey("MediaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Palladin.Data.Entity.ProjectVulnerabilityEntity", "ProjectVulnerability")
                        .WithMany("MediaPVEntities")
                        .HasForeignKey("ProjectVulnerabilityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Palladin.Data.Entity.MenuItemEntity", b =>
                {
                    b.HasOne("Palladin.Data.Entity.MenuEntity", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Palladin.Data.Entity.ProjectEntity", b =>
                {
                    b.HasOne("Palladin.Data.Entity.UserEntity", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("Palladin.Data.Entity.UserEntity", "User")
                        .WithOne("Project")
                        .HasForeignKey("Palladin.Data.Entity.ProjectEntity", "UserId");
                });

            modelBuilder.Entity("Palladin.Data.Entity.ProjectVulnerabilityEntity", b =>
                {
                    b.HasOne("Palladin.Data.Entity.MethodProtocolEntity", "MethodProtocol")
                        .WithOne("ProjectVulnerability")
                        .HasForeignKey("Palladin.Data.Entity.ProjectVulnerabilityEntity", "MethodProtocolId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Palladin.Data.Entity.ProjectEntity", "Project")
                        .WithOne("ProjectVulnerability")
                        .HasForeignKey("Palladin.Data.Entity.ProjectVulnerabilityEntity", "ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Palladin.Data.Entity.VulnerabilityEntity", "Vulnerability")
                        .WithOne("ProjectVulnerability")
                        .HasForeignKey("Palladin.Data.Entity.ProjectVulnerabilityEntity", "VulnerabilityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Palladin.Data.Entity.UserEntity", b =>
                {
                    b.HasOne("Palladin.Data.Entity.MenuEntity", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId");
                });

            modelBuilder.Entity("Palladin.Data.Entity.UserMenuEntity", b =>
                {
                    b.HasOne("Palladin.Data.Entity.MenuEntity", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Palladin.Data.Entity.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Palladin.Data.Entity.VulnerabilityEntity", b =>
                {
                    b.HasOne("Palladin.Data.Entity.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Palladin.Data.Entity.VulnerabilityLangEntity", b =>
                {
                    b.HasOne("Palladin.Data.Entity.VulnerabilityEntity", "Vulnerability")
                        .WithMany("Vulnerabilities")
                        .HasForeignKey("VulnerabilityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
